{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board.component.css","webpack:///./src/app/board/board.component.html","webpack:///./src/app/board/board.component.ts","webpack:///./src/app/bot.ts","webpack:///./src/app/card.ts","webpack:///./src/app/game.service.ts","webpack:///./src/app/game.ts","webpack:///./src/app/hand/hand.component.css","webpack:///./src/app/hand/hand.component.html","webpack:///./src/app/hand/hand.component.ts","webpack:///./src/app/mock_game.ts","webpack:///./src/app/move.ts","webpack:///./src/app/player.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,4C;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,YAAY,CAAC;IACvB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACU;AACH;AActD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,6BAA6B,oBAAoB,0BAA0B,6BAA6B,KAAK,yBAAyB,oBAAoB,6BAA6B,0BAA0B,SAAS,gBAAgB,kBAAkB,KAAK,eAAe,oBAAoB,6BAA6B,wBAAwB,KAAK,eAAe,8BAA8B,+BAA+B,iBAAiB,yBAAyB,KAAK,6BAA6B,4BAA4B,uBAAuB,8BAA8B,iBAAiB,qBAAqB,qBAAqB,QAAQ,oBAAoB,gDAAgD,qBAAqB,KAAK,sBAAsB,iCAAiC,6BAA6B,0BAA0B,gCAAgC,iBAAiB,kBAAkB,0BAA0B,eAAe,kBAAkB,4BAA4B,kCAAkC,qBAAqB,kBAAkB,4BAA4B,QAAQ,gBAAgB,4BAA4B,kCAAkC,qBAAqB,kBAAkB,YAAY,gBAAgB,yBAAyB,8BAA8B,+BAA+B,iCAAiC,wBAAwB,kBAAkB,wBAAwB,wBAAwB,SAAS,gBAAgB,wBAAwB,4BAA4B,kBAAkB,KAAK,oBAAoB,4BAA4B,yBAAyB,sBAAsB,uBAAuB,4BAA4B,WAAW,oBAAoB,wBAAwB,KAAK,mBAAmB,wBAAwB,oBAAoB,0BAA0B,KAAK,wBAAwB,qBAAqB,2BAA2B,yBAAyB,+BAA+B,KAAK,uBAAuB,4BAA4B,4BAA4B,yBAAyB,2BAA2B,KAAK,eAAe,wBAAwB,8BAA8B,2BAA2B,yBAAyB,yBAAyB,yBAAyB,0BAA0B,uBAAuB,QAAQ,oBAAoB,0BAA0B,4CAA4C,KAAK,sBAAsB,yCAAyC,KAAK,C;;;;;;;;;;;ACAn+E,iuBAAiuB,UAAU,gBAAgB,2DAA2D,8KAA8K,UAAU,mMAAmM,UAAU,wCAAwC,2DAA2D,kGAAkG,iDAAiD,qNAAqN,UAAU,sGAAsG,UAAU,wMAAwM,UAAU,0MAA0M,wCAAwC,wC;;;;;;;;;;;;;;;;;;;;;;;;;ACAlpE;AAEJ;AAO9C;IA4FC,wBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAzFhD,sBAAI,8BAAE;aAAN;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QACzB,CAAC;;;OAAA;IAED,gCAAO,GAAP;QACC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,6BAAI,GAAJ;QACC,uCAAuC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAChC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,mBAAmB;YACzE,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAChE,wCAAwC;YACxC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,CAAC;IACF,CAAC;IAED,oCAAW,GAAX;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/B,kBAAkB;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAC/B,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAChC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC1C,sBAAsB;gBACtB,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1F,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;gBAEhE,qEAAqE;gBACtE,iBAAiB;YACjB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;gBACzF,kCAAkC;gBAClC,mCAAmC;gBACnC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7F,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAGjE,CAAC;YAED,cAAc;YACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;YAEf,mBAAmB;YACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,CAAC;IACF,CAAC;IAED,oCAAW,GAAX,UAAY,IAAI,EAAE,KAAK;QACtB,UAAU;QACV,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAChC,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvL,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;YACzE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACtC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAElF,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAGjE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7F,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACjE,CAAC;QACA,cAAc;QACd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,mBAAmB;QACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;IAEnC,CAAC;IAED,6BAAI,GAAJ;QACC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAMD,iCAAQ,GAAR;QACC,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAhGW,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCA6FgC,yDAAW;OA5FhC,cAAc,CAkG1B;IAAD,qBAAC;CAAA;AAlG0B;;;;;;;;;;;;;ACR3B;AAAA;AAAA;AAAA;AAAA;AAA6B;AACM;AACnC,iCAAiC;AAEjC;IAwMC;IAEA,CAAC;IAzMD,yBAAyB;IACzB,8BAAgB,GAAhB,UAAiB,IAAU;QAC1B,IAAI,aAAa,GAAG,EAAE,CAAC;QAEvB,OAAO;QACP,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACrD,IAAI,SAAS,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;YAChC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAChD,aAAa,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;QACjD,CAAC;QAED,sBAAsB;QACtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YACjC,eAAe;YACf,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;gBACrB,6BAA6B;gBAC7B,IAAI,qBAAqB,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;gBAC5C,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1F,aAAa,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,QAAQ,EAAE,qBAAqB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBAE3E,0BAA0B;gBAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,WAAW;oBAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACtF,IAAI,YAAY,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;wBACnC,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC7D,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;wBAC7C,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,4BAA4B;wBAC3G,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,6BAA6B;wBACjG,aAAa,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,SAAS,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAG,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;oBAC1F,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC7C,IAAI,cAAc,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;gBACrC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/E,aAAa,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,UAAU,EAAE,cAAc,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;YACvE,CAAC;YAED,IAAI,CAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,MAAM,EAAE,WAAW;wBAC9C,IAAI,cAAc,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;wBACrC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAClG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACvF,aAAa,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;oBACxF,CAAC,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC5D,MAAM,CAAC,gBAAgB,CAAC;IACzB,CAAC;IACD,+BAA+B;IAC/B,0BAAY,GAAZ,UAAa,IAAU;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,GAAI,IAAI,CAAC,GAAG,CAAC,UAAU,GAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM;cAC9G,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACtH,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAAA,KAAK,GAAG,CAAC,GAAG,CAAC;YAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAAA,CAAC;QACrE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YAAC,KAAK,GAAG,GAAG,CAAC;QAC9B,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,0BAAY,GAAZ,UAAa,IAAU;QAAvB,iBAUC;QATA,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,cAAI;YACxB,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAEzC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC;gBACzC,KAAK,GAAG,UAAU,CAAC;YACpB,CAAC;QACF,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,wBAAU,GAAV,UAAW,KAAkB,EAAE,IAAU;QAAzC,iBAgDC;QA/CA,IAAI,aAAa,GAAG,IAAI,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC;QAEtB,KAAK,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YACzB,IAAI,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAEzC,EAAE,CAAC,CAAC,aAAa,IAAI,IAAI,IAAI,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC;gBACzD,aAAa,GAAG,UAAU,CAAC;gBAC3B,UAAU,GAAG,KAAK,CAAC;YACpB,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;QAGlC,yDAAyD;QAEzD,6BAA6B;QAC7B,IAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;QAChC,IAAI,YAAY,GAAG,EAAE,CAAC;QAEtB,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,KAAK,MAAM;gBACV,YAAY,GAAG,mBAAmB;gBAClC,KAAK,CAAC;YACP,KAAK,QAAQ;gBACZ,YAAY,GAAG,0BAAwB,SAAS,CAAC,IAAI,CAAC,IAAI,gBAAa,CAAC;gBACxE,KAAK,CAAC;YACP,KAAK,UAAU;gBACd,YAAY,GAAG,0BAAwB,SAAS,CAAC,IAAI,CAAC,IAAM,CAAC;gBAC7D,KAAK,CAAC;YACP,KAAK,SAAS;gBACb,YAAY,GAAG,8BAA4B,SAAS,CAAC,MAAM,CAAC,IAAI,kBAAa,SAAS,CAAC,IAAI,CAAC,IAAM,CAAC;gBACnG,KAAK,CAAC;YACP,KAAK,MAAM;gBACV,YAAY,GAAG,4BAA0B,SAAS,CAAC,MAAM,CAAC,IAAI,kBAAa,SAAS,CAAC,IAAI,CAAC,IAAM,CAAC;gBACjG,KAAK,CAAC;YACP;gBACC,UAAU;gBACV,KAAK,CAAC;QACR,CAAC;QAED,KAAK,CAAC,YAAY,CAAC,CAAC;QAEpB,IAAI,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC;QACtC,MAAM,CAAC,gBAAgB,CAAC;IAEzB,CAAC;IAED,sBAAQ,GAAR,UAAS,IAAU,EAAE,IAAU;QAC9B,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,KAAK,MAAM;gBACV,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBACtC,KAAK,CAAC;YACP,KAAK,QAAQ;gBACZ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D,KAAK,CAAC;YACP,KAAK,SAAS;gBACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,KAAK,CAAC;YACP,KAAK,QAAQ;gBACb,SAAS;gBACR,KAAK,CAAC;YACP,KAAK,UAAU;gBACd,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,KAAK,CAAC;QACR,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED,yBAAW,GAAX,UAAY,WAAiB,EAAE,mBAAyB;QACvD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,qDAAqD;QACrD,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1C,IAAI,oBAAkB,GAAG,CAAC,CAAC;YAC3B,kDAAkD;YAClD,EAAE,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACtC,+EAA+E;gBAC/E,GAAG,GAAG,4NAA4N,CAAC;gBACnO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAI;oBACnC,+CAA+C;oBAC/C,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAM;wBACpC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,oBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC;4BACtI,GAAG,GAAG,+HAA+H,CAAC;4BACtI,oBAAkB,GAAG,CAAC,CAAC;wBACxB,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,WAAW,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,oBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC;4BACvF,GAAG,GAAG,mJAAmJ,CAAC;4BAC1J,oBAAkB,GAAG,CAAC,CAAC;wBACxB,CAAC;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,CAAC;YACJ,CAAC;YAED,mCAAmC;YACnC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;gBAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;oBACrB,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,0BAA0B,GAAG,IAAI,CAAC,IAAI,IAAI,oBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC1F,GAAG,GAAG,iHAAiH,CAAC;wBACxH,oBAAkB,GAAG,CAAC,CAAC;oBACxB,CAAC;gBACF,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC1B,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,gBAAgB,IAAI,oBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC;wBACpE,GAAG,GAAG,sHAAsH,CAAC;wBAC7H,oBAAkB,GAAG,CAAC,CAAC;oBACxB,CAAC;gBACF,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,WAAW,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,IAAI,oBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC;oBACvF,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;wBAClC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC,CAAC;4BAChE,GAAG,GAAG,yHAAyH,CAAC;4BAChI,oBAAkB,GAAG,CAAC,CAAC;wBACxB,CAAC;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC,CAAC,CAAC;QAEJ,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACZ,CAAC;IAKF,UAAC;AAAD,CAAC;;AAID,uBAAuB;AACvB,cAAc;AACd,iBAAiB;AACjB,cAAc;AACd,iBAAiB;AACjB,cAAc;AACd,mBAAmB;AACnB,cAAc;AACd,iBAAiB;AACjB,cAAc;AACd,cAAc;AACd,+BAA+B;AAC/B,+BAA+B;AAC/B,sCAAsC;AACtC,iDAAiD;AACjD,oKAAoK;AACpK,mDAAmD;AACnD,mBAAmB;AACnB,cAAc;AACd,iBAAiB;AAEjB,cAAc;AACd,cAAc;AACd,+BAA+B;AAC/B,iBAAiB;AACjB,cAAc;AACd,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,+BAA+B;AAC/B,iBAAiB;AACjB,eAAe;AACf,iBAAiB;AACjB,eAAe;AACf,eAAe;AACf,iBAAiB;;;;;;;;;;;;;ACvPjB;AAAA;AAAA;IAyBC,cAAY,IAAY,EAAE,IAAY;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAQ,CAAC;IAChC,CAAC;IAxBD,sBAAI,qBAAG;aAAP;YACC,MAAM,CAAC,UAAQ,IAAI,CAAC,IAAI,SAAI,IAAI,CAAC,IAAI,SAAM,CAAC;QAC7C,CAAC;;;OAAA;IAED,sBAAI,sBAAI;aAAR;YACC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnB,KAAK,CAAC;oBACL,MAAM,CAAI,IAAI,CAAC,IAAI,cAAW,CAAC;gBAC/B,SAAS;gBACV,KAAK,CAAC;oBACL,MAAM,CAAI,IAAI,CAAC,IAAI,iBAAc,CAAC;gBAClC,SAAS;gBACV,KAAK,CAAC;oBACL,MAAM,CAAI,IAAI,CAAC,IAAI,eAAY,CAAC;gBAChC,SAAS;gBACV;oBACC,MAAM,CAAI,IAAI,CAAC,IAAI,eAAY,CAAC;YAElC,CAAC;QACF,CAAC;;;OAAA;IAMF,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9B0C;AAGf;AACO;AAMnC;IAuGC;QACC,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAQ,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAQ,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,+CAAI,CAAC,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,wCAAG,EAAE,CAAC;IAC3B,CAAC;IAvGD,sBAAI,mCAAU;aAAd;YAAA,iBAmEC;YAlEA,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,CAAC;oBACP,KAAK,CAAC,CAAC;oBACP,KAAK,CAAC,CAAC;oBACP,KAAK,CAAC,CAAC;oBACP,KAAK,CAAC,CAAC;oBACP,KAAK,CAAC;wBACL,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,2BAA2B;wBAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;4BAChC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;gCAC7G,gCAAgC;gCAChC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;wBACF,CAAC,CAAC,CAAC;wBACH,KAAK,CAAC;oBAEP,KAAK,CAAC,CAAC;oBACP,KAAK,CAAC;wBACL,2BAA2B;wBAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;4BAChC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;gCAC7G,gCAAgC;gCAChC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;wBACF,CAAC,CAAC,CAAC;wBACH,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,KAAK,CAAC;oBACP,KAAK,CAAC;wBACL,2BAA2B;wBAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;4BAChC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;gCAC7G,gCAAgC;gCAChC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;wBACF,CAAC,CAAC,CAAC;wBACH,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,KAAK,CAAC;oBACP,KAAK,EAAE;wBACN,2BAA2B;wBAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;4BAChC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;gCAC7G,gCAAgC;gCAChC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC;wBACF,CAAC,CAAC,CAAC;wBACH,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,KAAK,CAAC;oBACP,KAAK,EAAE;wBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;4BACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;gCAChC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;4BAC9B,CAAC,CAAC,CAAC;wBACJ,CAAC;wBACD,KAAK,CAAC;oBACP,KAAK,EAAE,CAAC;oBACR,KAAK,EAAE;wBACN,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACpB,KAAK,CAAC;gBACR,CAAC;YACF,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;;;OAAA;IAGD,sBAAI,6BAAI;QADR,0CAA0C;aAC1C;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IAED,4BAAM,GAAN,UAAO,OAAa,EAAE,OAAa;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE3B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC/B,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC9B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC/D,EAAE,CAAC,CAAC,UAAU,CAAC;gBAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACnC,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5B,qCAAqC;QACtC,CAAC;IACF,CAAC;IAED,0BAAI,GAAJ;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAK,CAAC,6DAA6D,CAAC,CAAC;QACtE,CAAC;IACF,CAAC;IArGW,WAAW;QAJvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OAEW,WAAW,CA+GvB;IAAD,kBAAC;CAAA;AA/GuB;;;;;;;;;;;;;ACVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACL;AACI;AAElC;IAqCC;QACC,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAQ,CAAC;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAQ,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,EAAU,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,8CAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,gBAAgB;QACrD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,8CAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,qBAAqB;QAE3D,cAAc;QACd,GAAG,CAAC,CAAC,IAAI,IAAI,GAAC,CAAC,EAAE,IAAI,GAAC,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC;YACjC,GAAG,CAAC,CAAC,IAAI,IAAI,GAAC,CAAC,EAAE,IAAI,GAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC;gBAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;YACtC,CAAC;QACF,CAAC;QACD,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,eAAe;QAE/B,OAAO;QACP,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,sBAAsB;QAC7D,2CAA2C;QAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAC7C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9C,CAAC;IAEF,CAAC;IAnDD,sBAAI,qBAAG;QALP,gBAAgB;QAEhB,YAAY;QACZ,YAAY;QACZ,YAAY;aACZ;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;;;OAAA;IACD,sBAAI,wBAAM;aAAV;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;;;OAAA;IACD,sBAAI,yBAAO;aAAX;YACC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;QAC1B,CAAC;;;OAAA;IACD,sBAAI,4BAAU;aAAd;YACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC7B,CAAC;;;OAAA;IAED,aAAa;IACb,aAAa;IACb,aAAa;IACb,gBAAgB;IAChB,sBAAO,GAAP;QACC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,iCAA2D,EAA1D,oBAAY,EAAE,oBAAY,CAAiC;QAC7D,CAAC;;IACF,CAAC;IAED,mBAAI,GAAJ;QACC,MAAM,CAAC,wDAAS,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IA0BF,WAAC;AAAD,CAAC;;;;;;;;;;;;;ACjED,uBAAuB,yBAAyB,4BAA4B,sBAAsB,yBAAyB,KAAK,SAAS,yBAAyB,4BAA4B,sBAAsB,2BAA2B,KAAK,eAAe,8BAA8B,KAAK,C;;;;;;;;;;;ACAtS,0MAA0M,UAAU,oDAAoD,6BAA6B,c;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5O;AACtB;AAEW;AAO9C;IAEC,uBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,sBAAI,mCAAQ;aAAZ;YACC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAClC,CAAC;;;OAAA;IACD,sBAAI,iCAAM;aAAV,UAAW,IAAI;YACd,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,CAAC;;;OAAA;IAED,iCAAS,GAAT,UAAU,KAAK;QACd,gBAAgB;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAClC,CAAC;IACF,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IAtBQ;QAAR,2DAAK,EAAE;kCAAS,8CAAM;iDAAC;IADZ,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGgC,yDAAW;OAFhC,aAAa,CAyBzB;IAAD,oBAAC;CAAA;AAzByB;;;;;;;;;;;;;ACR1B;AAAA;AAAA;AAA8B;AAE9B,IAAI,IAAI,GAAG,IAAI,0CAAI,EAAE,CAAC;AAEtB,qBAAqB;AAEN;;;;;;;;;;;;;ACRf;AAAA;AAAA;AAAA;AAAA;AAA8B;AAGK;AAEnC;IA2BI,cAAY,IAAI,EAAE,IAAI,EAAE,IAAK,EAAE,KAAM,EAAE,MAAO,EAAE,YAAa;QACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IA1BD,0BAAW,GAAX,UAAY,IAAU;QAClB,IAAI,eAAe,GAAG,EAAE,CAAC;QACzB,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACpD,IAAI,SAAS,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;YAEhC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YAEnD,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC;QACD,qEAAqE;QACrE,IAAI,gBAAgB,GAAG,wDAAS,CAAC,IAAI,CAAC,CAAC;QACvC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,0CAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACrD,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACrC,eAAe,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEvC,MAAM,CAAC,eAAe,CAAC;IAC3B,CAAC;IAWL,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;IAkGC,gBAAY,KAAK;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAQ,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,EAAQ,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,EAAQ,CAAC;IACpC,CAAC;IAjGD,sBAAI,yBAAK;aAAT;YACC,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;gBACvB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IACD,sBAAI,4BAAQ;aAAZ;YACC,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAI;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;oBAAC,GAAG,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IACD,sBAAI,6BAAS;aAAb;YACC,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAI;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;oBAAC,GAAG,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IACD,sBAAI,8BAAU;aAAd;YACC,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,cAAI;gBACvB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IACD,sBAAI,8CAA0B;aAA9B;YACC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvB,KAAK,CAAC;oBACL,GAAG,GAAG,EAAE,CAAC;oBACT,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,GAAG,GAAG,EAAE,CAAC;oBACT,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,GAAG,GAAG,EAAE,CAAC;oBACT,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,GAAG,GAAG,CAAC,CAAC;oBACR,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,GAAG,GAAG,CAAC,CAAC;oBACR,KAAK,CAAC;YACR,CAAC;YACD,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IACD,sBAAI,oCAAgB;aAApB;YACC,IAAI,GAAG,GAAG,KAAK,CAAC;YAChB,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACvB,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBACtC,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBACtC,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBACrC,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBACrC,KAAK,CAAC;YACR,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IACD,sBAAI,4BAAQ;aAAZ;YACC,IAAI,GAAG,GAAG,KAAK,CAAC;YAChB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC7B,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBAC5B,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBAC5B,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBAC5B,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBAC3B,KAAK,CAAC;gBACP,KAAK,CAAC;oBACL,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;wBAAC,GAAG,GAAG,IAAI,CAAC;oBAC3B,KAAK,CAAC;YACR,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACZ,CAAC;;;OAAA;IAQF,aAAC;AAAD,CAAC;;;;;;;;;;;;;;AC1GD;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-board></app-board>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cuttle Bot';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './board/board.component';\nimport { HandComponent } from './hand/hand.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    HandComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".flex-all {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: row;\\r\\n\\tjustify-content: left;;\\r\\n}\\r\\n\\r\\n.flex-container {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\talign-items: center;\\r\\n\\r\\n}\\r\\n\\r\\n.flex1 {\\r\\n\\theight: 15%;\\r\\n}\\r\\n\\r\\n#side {\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: column;\\r\\n\\tmargin: auto 10px;\\r\\n}\\r\\n\\r\\n#undo {\\r\\n    /* position: absolute; */\\r\\n\\tdisplay: inline-block;\\r\\n\\theight: 8%;\\r\\n    max-height: 64px;\\r\\n}\\r\\n\\r\\n#botHand, #yourHand {\\r\\n\\t/* position: absolute; */\\r\\n\\tdisplay: flex;\\r\\n\\tjustify-content: center;\\r\\n\\twidth: 80%;\\r\\n\\t/* height: 15%; */\\r\\n\\t/* top: 10%; */\\r\\n}\\r\\n\\r\\n#indicator {\\r\\n\\tfont-family: Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 2em;\\r\\n}\\r\\n\\r\\n/* #yourHand { */\\r\\n\\r\\n/* position: absolute; */\\r\\n\\r\\n/* display: block; */\\r\\n\\r\\n/* width: 100%; */\\r\\n\\r\\n/* max-height: 200px;\\r\\n\\twidth: 80%;\\r\\n\\theight: 15%; */\\r\\n\\r\\n/* bottom: 10%; */\\r\\n\\r\\n/* } */\\r\\n\\r\\n#deck {\\r\\n\\t/* position: absolute; */\\r\\n\\t/* display: inline-block; */\\r\\n\\theight: 20%;\\r\\n\\t/* top: 28%; */\\r\\n\\t/* margin-left: 2%; */\\r\\n}\\r\\n\\r\\n#scrap {\\r\\n\\t/* position: absolute; */\\r\\n\\t/* display: inline-block; */\\r\\n\\theight: 20%;\\r\\n\\t/* top: 49%; */\\r\\n\\r\\n}\\r\\n\\r\\n#field {\\r\\n\\tposition: relative;\\r\\n\\tjustify-content: center;\\r\\n\\t/* display: inline-block; */\\r\\n\\tborder: 2px solid black;\\r\\n\\tmin-width: 1200px;\\r\\n\\twidth: 100%;\\r\\n\\tmin-height: 400px;\\r\\n\\tmax-height: 600px;\\r\\n\\r\\n}\\r\\n\\r\\n.field {\\r\\n\\t/* display: block; */\\r\\n\\tposition: relative;\\r\\n\\theight: 50%;\\r\\n}\\r\\n\\r\\n.fieldArea {\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: relative;\\r\\n\\t/* height: 100%; */\\r\\n\\t/* width: 50%;  */\\r\\n\\tmin-height: 200px;\\r\\n\\t\\r\\n}\\r\\n\\r\\n#yourField {\\r\\n\\tmin-height: 200px;\\r\\n}\\r\\n\\r\\n#botField {\\r\\n\\tmin-height: 200px;\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: row;\\r\\n}\\r\\n\\r\\n.yourPointCard {\\r\\n\\t/* height: 80%; */\\r\\n\\t/* margin-top: 1%;\\r\\n\\t/* margin-left: 1%; */\\r\\n\\tdisplay: inline-block;\\r\\n}\\r\\n\\r\\n.pointCardImg {\\r\\n\\tdisplay: inline-block;\\r\\n\\t/* position: relative; */\\r\\n\\t/* height: 100%; */\\r\\n\\tmax-height: 200px;\\r\\n}\\r\\n\\r\\n.jack {\\r\\n\\t/* display: block; */\\r\\n    /* position: fixed; */\\r\\n\\tmax-height: 200px;\\r\\n\\tposition: relative;\\r\\n\\tmargin-left: -90px;\\r\\n\\tmargin-right: 10px;\\r\\n\\r\\n    /* top: -104%; */\\r\\n    /* left: 7%; */\\r\\n}\\r\\n\\r\\n.legalMove {\\r\\n\\t/* min-height: 100%; */\\r\\n\\tbackground-color: rgb(91, 194, 69);\\r\\n}\\r\\n\\r\\n.validTarget {\\r\\n\\tborder: 2px solid rgb(91, 194, 69);\\r\\n}\"","module.exports = \"<img id=\\\"undo\\\" src=\\\"assets/back-arrow.png\\\" (click)=\\\"undo()\\\">\\r\\n\\r\\n<div class=\\\"flex-all\\\">\\r\\n\\t<div id=\\\"side\\\">\\r\\n\\t\\t<img src=\\\"assets/deck.jpg\\\" id=\\\"deck\\\" (click)=\\\"draw()\\\">\\r\\n\\t\\t<img src=\\\"assets/scrap.jpg\\\" id=\\\"scrap\\\">\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"flex-container\\\">\\r\\n\\r\\n\\t\\t<!-- <div class=\\\"flex-container flex1\\\"> -->\\r\\n\\t\\t<app-hand id=\\\"botHand\\\" [player]=\\\"game.players[0]\\\"></app-hand>\\r\\n\\t\\t<!-- </div> -->\\r\\n\\r\\n\\r\\n\\t\\t<div id=\\\"field\\\">\\r\\n\\t\\t\\t<div id=\\\"botField\\\" class=\\\"field\\\">\\r\\n\\t\\t\\t\\t<div id=\\\"botPoints\\\" class=\\\"fieldArea\\\">\\r\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let card of game.bot.points index as index\\\" class=\\\"yourPointCard\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/cards/{{card.img}}\\\" [ngClass]=\\\"{'validTarget': gameService.validTargets.indexOf(card) > -1}\\\"\\r\\n\\t\\t\\t\\t\\t\\t (click)=\\\"targetPoint(card, index)\\\" class=\\\"pointCardImg\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngFor=\\\"let jack of card.jacks index as jackIndex\\\" src=\\\"assets/cards/{{jack.img}}\\\" class=\\\"jack\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div id=\\\"botFaceCards\\\" class=\\\"fieldArea\\\">\\r\\n\\t\\t\\t\\t\\t<img *ngFor=\\\"let card of game.bot.faceCards\\\" src=\\\"assets/cards/{{card.img}}\\\" class=\\\"yourPointCard\\\" [ngClass]=\\\"{'validTarget': gameService.validTargets.indexOf(card) > -1}\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div id=\\\"yourField\\\" class=\\\"field\\\" [ngClass]=\\\"{'legalMove': gs.legalMoves.indexOf('field') > -1}\\\" (click)='playToField()'>\\r\\n\\t\\t\\t\\t<div id=\\\"yourPoints\\\" class=\\\"fieldArea\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t<div *ngFor=\\\"let card of game.player.points\\\" class=\\\"yourPointCard\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/cards/{{card.img}}\\\" class=\\\"pointCardImg\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img *ngFor=\\\"let jack of card.jacks\\\" src=\\\"assets/cards/{{jack.img}}\\\" class=\\\"jack\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div id=\\\"yourPointsFace\\\" class=\\\"fieldArea\\\">\\r\\n\\t\\t\\t\\t\\t<img *ngFor=\\\"let card of game.player.faceCards\\\" src=\\\"assets/cards/{{card.img}}\\\" class=\\\"pointCardImg\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<app-hand id=\\\"yourHand\\\" [player]=\\\"game.players[1]\\\"></app-hand>\\r\\n\\t\\t<div id=\\\"indicator\\\">Victory requirements: {{game.player.remainingPointsNeededToWin}} points</div>\\r\\n\\t</div>\\r\\n\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Game } from '../game';\r\nimport { GameService } from '../game.service';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.css']\r\n})\r\nexport class BoardComponent implements OnInit {\r\n\tgame: Game;\r\n\r\n\tget gs() {\r\n\t\treturn this.gameService;\r\n\t}\r\n\r\n\tgetGame() {\r\n\t\tthis.game = this.gameService.game;\r\n\t}\r\n\r\n\tdraw() {\r\n\t\t// Check if you're under the hand limit\r\n\t\tif (this.game.player.hand.length < 8) {\r\n\t\t\tlet oldGame = this.game.copy();\r\n\t\t\tlet gameCopy = this.game.copy();\r\n\t\t\tgameCopy.players[1].hand.push(gameCopy.deck.shift()); // add card to hand\r\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\r\n\t\t\t// Add change to history and update game\r\n\t\t\tthis.gameService.update(oldGame, gameCopy);\r\n\t\t\tthis.getGame();\r\n\t\t\tthis.gameService.selected = null;\r\n\t\t\tthis.gameService.selIndex = null;\r\n\t\t}\r\n\t}\r\n\r\n\tplayToField() {\r\n\t\tif (this.gameService.selected) {\t\t\r\n\t\t\t// Play for points\r\n\t\t\tvar oldGame = this.game.copy();\r\n\t\t\tvar gameCopy = this.game.copy();\r\n\t\t\tif (this.gameService.selected.rank <= 10) {\r\n\t\t\t\t// Move card to points\r\n\t\t\t\tgameCopy.player.points.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\r\n\t\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\r\n\r\n\t\t\t\t// this.gameService.botBrain.decideLegalMoves(this.gameService.game);\r\n\t\t\t// Play face card\r\n\t\t\t} else if (this.gameService.selected.rank == 12 || this.gameService.selected.rank == 13) {\r\n\t\t\t\t// var oldGame = this.game.copy();\r\n\t\t\t\t// var gameCopy = this.game.copy();\r\n\t\t\t\tgameCopy.player.faceCards.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\r\n\t\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\r\n\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// Update game\r\n\t\t\tthis.gameService.update(oldGame, gameCopy);\r\n\t\t\tthis.getGame();\r\n\r\n\t\t\t// Delete selection\r\n\t\t\tthis.gameService.selected = null;\r\n\t\t\tthis.gameService.selIndex = null;\r\n\t\t}\r\n\t}\r\n\r\n\ttargetPoint(card, index) {\r\n\t\t// Scuttle\r\n\t\tvar gameCopy = this.game.copy();\r\n\t\tlet oldGame = this.game.copy();\r\n\t\tif (this.gameService.selected.rank <= 10 && this.gameService.selected.rank > card.rank || (this.gameService.selected.rank == card.rank && this.gameService.selected.suit > card.suit)) {\r\n\t\t\tgameCopy.scrap = gameCopy.scrap.concat(gameCopy.bot.points[index].jacks);\r\n\t\t\tgameCopy.bot.points[index].jacks = [];\r\n\t\t\tgameCopy.scrap.push(gameCopy.bot.points.splice(index, 1)[0]);\r\n\t\t\tgameCopy.scrap.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\r\n\r\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\r\n\r\n\r\n\t\t} else if (this.gameService.selected.rank == 11 && this.gameService.game.bot.numQueens == 0) {\r\n\t\t\tgameCopy.bot.points[index].jacks.push(gameCopy.player.hand.splice(this.gameService.selIndex, 1)[0]);\r\n\t\t\tgameCopy.player.points.push(gameCopy.bot.points.splice(index, 1)[0]);\r\n\t\t\tgameCopy = this.gameService.botBrain.decideLegalMoves(gameCopy);\r\n\t\t}\r\n\t\t\t// Update game\r\n\t\t\tthis.gameService.update(oldGame, gameCopy);\r\n\t\t\tthis.getGame();\r\n\r\n\t\t\t// Delete selection\r\n\t\t\tthis.gameService.selected = null;\r\n\t\t\tthis.gameService.selIndex = null;\r\n\r\n\t}\r\n\r\n\tundo() {\r\n\t\tthis.gameService.undo();\r\n\t\tthis.getGame();\r\n\t}\r\n\r\n\r\n\r\n\tconstructor(private gameService: GameService) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.getGame();\r\n\t}\r\n\r\n}\r\n","import { Game } from './game';\r\nimport { Move } from './move'\r\nimport { cloneDeep } from 'lodash';\r\n// import { Game } from './game';\r\n\r\nexport class Bot {\r\n\t// looking one step ahead\r\n\tdecideLegalMoves(game: Game) {\r\n\t\tlet possibleMoves = [];\r\n\r\n\t\t// Draw\r\n\t\tif (game.bot.hand.length < 8 && game.deck.length > 0){\r\n\t\t\tlet game_copy = cloneDeep(game);\r\n\t\t\tgame_copy.bot.hand.push(game_copy.deck.shift());\r\n\t\t\tpossibleMoves.push(new Move(\"draw\", game_copy));\r\n\t\t}\r\n\r\n\t\t// Play cards to field\r\n\t\tgame.bot.hand.forEach((card, index) => {\r\n\t\t\t// Number cards\r\n\t\t\tif (card.rank <= 10) {\r\n\t\t\t\t// Playing the card as points\r\n\t\t\t\tvar play_points_game_copy = cloneDeep(game);\r\n\t\t\t\tplay_points_game_copy.bot.points.push(play_points_game_copy.bot.hand.splice(index, 1)[0]);\r\n\t\t\t\tpossibleMoves.push(new Move(\"points\", play_points_game_copy, card, index));\r\n\r\n\t\t\t\t// Check possible scuttles\r\n\t\t\t\tgame.player.points.forEach((target, targetIndex) => {\r\n\t\t\t\t\tif (card.rank > target.rank || (card.rank == target.rank && card.suit > target.suit)) {\r\n\t\t\t\t\t\tvar scuttle_copy = cloneDeep(game);\r\n\t\t\t\t\t\tscuttle_copy.scrap = scuttle_copy.scrap.concat(target.jacks);\r\n\t\t\t\t\t\tscuttle_copy.player.points[targetIndex] = [];\r\n\t\t\t\t\t\tscuttle_copy.scrap.push(scuttle_copy.player.points.splice(targetIndex, 1)[0]); // Scrap player's point card\r\n\t\t\t\t\t\tscuttle_copy.scrap.push(scuttle_copy.bot.hand.splice(index, 1)[0]); // Scrap bot's scuttling card\r\n\t\t\t\t\t\tpossibleMoves.push(new Move(\"scuttle\", scuttle_copy, card, index , target, targetIndex));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\t// Kings and Queens\r\n\t\t\telse if (card.rank == 12 || card.rank == 13) {\r\n\t\t\t\tvar play_face_copy = cloneDeep(game);\r\n\t\t\t\tplay_face_copy.bot.faceCards.push(play_face_copy.bot.hand.splice(index, 1)[0]);\r\n\t\t\t\tpossibleMoves.push(new Move(\"faceCard\", play_face_copy, card, index));\r\n\t\t\t}\r\n\t\t\t// Jacks\r\n\t\t\telse  if (card.rank == 11) {\r\n\t\t\t\tif (game.player.numQueens == 0) {\r\n\t\t\t\t\tgame.player.points.forEach((target, targetIndex) => {\r\n\t\t\t\t\t\tvar play_jack_copy = cloneDeep(game);\r\n\t\t\t\t\t\tplay_jack_copy.player.points[targetIndex].jacks.push(play_jack_copy.bot.hand.splice(index, 1)[0]);\r\n\t\t\t\t\t\tplay_jack_copy.bot.points.push(play_jack_copy.player.points.splice(targetIndex, 1)[0]);\r\n\t\t\t\t\t\tpossibleMoves.push(new Move(\"jack\", play_jack_copy, card, index, target, targetIndex));\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet gameAfterBotMove = this.chooseMove(possibleMoves, game);\r\n\t\treturn gameAfterBotMove;\r\n\t}\r\n\t// evaluating score of one game\r\n\tevaluateGame(game: Game) {\r\n\t\tlet score = game.bot.hand.length + game.bot.pointTotal % 10  + game.bot.pointTotal/10 + game.bot.faceCards.length\r\n\t\t\t- (game.player.hand.length + game.player.pointTotal % 10 + game.player.pointTotal/10 + game.player.faceCards.length);\r\n\t\tif (game.playerWins) {score = -100; console.log(\"PLAYER COULD WIN\");}\r\n\t\tif (game.botWins) score = 100;\r\n\t\treturn score;\r\n\t}\r\n\r\n\tevaluateMove(move: Move) {\r\n\t\tlet score = null;\r\n\t\tmove.results.forEach(game => {\r\n\t\t\tlet game_score = this.evaluateGame(game);\r\n\r\n\t\t\tif (score == null || game_score < score) {\r\n\t\t\t\tscore = game_score;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn score;\r\n\t}\r\n\r\n\tchooseMove(moves: Array<Move>, game: Game) {\r\n\t\tlet highest_score = null;\r\n\t\tlet high_index = null;\r\n\r\n\t\tmoves.forEach((move, index) => {\r\n\t\t\tlet move_score = this.evaluateMove(move);\r\n\r\n\t\t\tif (highest_score == null || highest_score < move_score) {\r\n\t\t\t\thighest_score = move_score;\r\n\t\t\t\thigh_index = index;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet best_move = moves[high_index];\r\n\r\n\r\n\t\t// let gameAfterBotMove = this.makeMove(best_move, game);\r\n\r\n\t\t// Alert player of bot's move\r\n\t\tconst moveName = best_move.name;\r\n\t\tlet announcement = \"\";\r\n\r\n\t\tswitch (moveName) {\r\n\t\t\tcase \"draw\":\r\n\t\t\t\tannouncement = \"Cuttle Bot Draws.\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"points\":\r\n\t\t\t\tannouncement = `Cuttle Bot plays the ${best_move.card.name} for points`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"faceCard\":\r\n\t\t\t\tannouncement = `Cuttle Bot plays the ${best_move.card.name}`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"scuttle\":\r\n\t\t\t\tannouncement = `Cuttle Bot scuttles your ${best_move.target.name} with its ${best_move.card.name}`;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jack\":\r\n\t\t\t\tannouncement = `Cuttle Bot steals your ${best_move.target.name} with its ${best_move.card.name}`;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// code...\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\talert(announcement);\r\n\r\n\t\tlet gameAfterBotMove = best_move.game;\r\n\t\treturn gameAfterBotMove;\r\n\r\n\t}\r\n\r\n\tmakeMove(move: Move, game: Game) {\r\n\t\tswitch (move.name) {\r\n\t\t\tcase \"draw\":\r\n\t\t\t\tgame.bot.hand.push(game.deck.shift());\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"points\":\r\n\t\t\t\tgame.bot.points.push(game.bot.hand.splice(move.index, 1)[0]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"scuttle\":\r\n\t\t\t\tgame.scrap.push(game.bot.hand.splice(move.index)[0]);\r\n\t\t\t\tgame.scrap.push(game.player.hand.splice(move.target_index)[0]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"oneOff\":\r\n\t\t\t// A LOT!\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"faceCard\":\r\n\t\t\t\tgame.bot.faceCards.push(game.bot.hand.splice(move.index, 1)[0])\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn game;\r\n\t}\r\n\r\n\tsuggestMove(initialGame: Game, gameAfterPlayerMove: Game) {\r\n\t\tconsole.log(initialGame);\r\n\t\tlet res = null;\r\n\t\t// Only consider suggesting move if player didn't win\r\n\t\tif (!gameAfterPlayerMove.player.isWinner) {\r\n\t\t\tlet betterMovePriority = 0;\r\n\t\t\t// Check for better defensive moves if player lost\r\n\t\t\tif (gameAfterPlayerMove.bot.isWinner) {\r\n\t\t\t\t// Assume player didn't have a better move unless we find a way to stop the bot\r\n\t\t\t\tres = \"Dang, you lost! Nice try. There was actually nothing you could have done better on that last turn. Try rewinding a few turns back if you want to see how the game could have gone, or just refresh the page to start over.\";\r\n\t\t\t\tinitialGame.player.hand.forEach(card => {\r\n\t\t\t\t\t// Check for potential scuttles and jack steals\r\n\t\t\t\t\tinitialGame.bot.points.forEach(target => {\r\n\t\t\t\t\t\tif ((card.rank <= 10 && card.rank > target.rank || (card.rank == target.rank && card.suit > target.suit)) && betterMovePriority == 0) {\r\n\t\t\t\t\t\t\tres = \"Dang, you lost! You might have been able to stop the bot if you scuttled last turn. Try rewinding and playing that turn over!\";\r\n\t\t\t\t\t\t\tbetterMovePriority = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (card.rank == 11 && initialGame.bot.numQueens == 0 && betterMovePriority <= 1) {\r\n\t\t\t\t\t\t\tres = \"Dang, you lost! You might have been able to stop the bot if you stole its points with a jack last turn. Try rewinding and playing that turn over!\";\r\n\t\t\t\t\t\t\tbetterMovePriority = 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Check for better offensive moves\r\n\t\t\tinitialGame.player.hand.forEach((card, index) => {\r\n\t\t\t\tif (card.rank <= 10) {\r\n\t\t\t\t\tif (initialGame.player.remainingPointsNeededToWin < card.rank && betterMovePriority == 0) {\r\n\t\t\t\t\t\tres = \"Psst! You actually could have won on that turn if you played differently. Consider rewinding and playing points\";\r\n\t\t\t\t\t\tbetterMovePriority = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (card.rank == 13) {\r\n\t\t\t\t\tif (initialGame.player.couldWinWithKing && betterMovePriority <= 1) {\r\n\t\t\t\t\t\tres = \"Psst! You actually could have won on that last turn if you played differently. Consider rewinding and playing a king\";\r\n\t\t\t\t\t\tbetterMovePriority = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (card.rank == 11 && initialGame.bot.numQueens == 0 && betterMovePriority <= 2) {\r\n\t\t\t\t\tinitialGame.bot.points.forEach(card => {\r\n\t\t\t\t\t\tif (card.rank >= initialGame.player.remainingPointsNeededToWin) {\r\n\t\t\t\t\t\t\tres = \"Psst! You actually could have won on that last turn if you played differently. Considering rewinding and playing a jack\";\r\n\t\t\t\t\t\t\tbetterMovePriority = 3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\treturn res;\r\n\t} \r\n\r\n\tconstructor() {\r\n\r\n\t}\r\n}\r\n\r\n\r\n\r\n// switch (move.name) {\r\n//     case 1:\r\n//         break;\r\n//     case 3:\r\n//         break;\r\n//     case 4:\r\n//         break;  \r\n//     case 5:\r\n//         break;\r\n//     case 6:\r\n//     case 7:\r\n//         moves.push(\"field\");\r\n//         moves.push(\"scrap\");\r\n//         // Determine legal scuttles\r\n//         this.game.bot.points.forEach(card => {\r\n//             // if (card.rank < this.gameService.selected.rank || (card.rank == this.gameService.selected.rank && card.suit <= this.gameService.selected.suit) ) {\r\n//             // \t// Add point to list of scuttles\r\n//             // }\r\n//         });\r\n//         break;\r\n\r\n//     case 2:\r\n//     case 9:\r\n//         moves.push(\"field\");\r\n//         break;\r\n//     case 8:\r\n//         moves.push(\"field\");\r\n//         break;\r\n//     case 10:\r\n//         moves.push(\"field\");\r\n//         break;\r\n//     case 11:\r\n//         break;\r\n//     case 12:\r\n//     case 13:\r\n//         break;","export class Card {\r\n\tsuit: number;\r\n\trank: number;\r\n\tjacks: Card[];\r\n\r\n\tget img(): string {\r\n\t\treturn `card_${this.suit}_${this.rank}.png`;\r\n\t}\r\n\r\n\tget name(): string {\r\n\t\tswitch (this.suit) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn `${this.rank} of Clubs`;\r\n\t\t\t\t// break;\r\n\t\t\tcase 1:\r\n\t\t\t\treturn `${this.rank} of Diamonds`;\r\n\t\t\t\t// break;\r\n\t\t\tcase 2:\r\n\t\t\t\treturn `${this.rank} of Hearts`;\r\n\t\t\t\t// break;\r\n\t\t\tdefault:\r\n\t\t\t\treturn `${this.rank} of Spades`;\r\n\t\t\t\t// break;\r\n\t\t}\r\n\t}\r\n\tconstructor(suit: number, rank: number) {\r\n\t\tthis.suit = suit;\r\n\t\tthis.rank = rank;\r\n\t\tthis.jacks = new Array<Card>();\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\nimport { Game } from './game';\r\nimport { Card } from './card';\r\nimport { Bot } from './bot';\r\nimport { game } from './mock_game'; \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GameService {\r\n\thistory: Array<Game>;\r\n\tbotBrain: Bot;\r\n\tselected: Card;\r\n\tselIndex: number;\r\n\tvalidTargets: Card[];\r\n\r\n\tget legalMoves() {\r\n\t\tlet moves = [];\r\n\t\tthis.validTargets = [];\r\n\t\tif (this.selected) {\r\n\t\t\tswitch (this.selected.rank) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\tcase 3:\r\n\t\t\t\tcase 4:\r\n\t\t\t\tcase 5:\r\n\t\t\t\tcase 6:\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tmoves.push(\"field\");\r\n\t\t\t\t\tmoves.push(\"scrap\");\r\n\t\t\t\t\t// Determine legal scuttles\r\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\r\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\r\n\t\t\t\t\t\t\t// Add point to list of scuttles\r\n\t\t\t\t\t\t\tthis.validTargets.push(card);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\tcase 9:\r\n\t\t\t\t\t// Determine legal scuttles\r\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\r\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\r\n\t\t\t\t\t\t\t// Add point to list of scuttles\r\n\t\t\t\t\t\t\tthis.validTargets.push(card);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tmoves.push(\"field\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\t// Determine legal scuttles\r\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\r\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\r\n\t\t\t\t\t\t\t// Add point to list of scuttles\r\n\t\t\t\t\t\t\tthis.validTargets.push(card);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tmoves.push(\"field\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\t// Determine legal scuttles\r\n\t\t\t\t\tthis.game.bot.points.forEach(card => {\r\n\t\t\t\t\t\tif (card.rank < this.selected.rank || (card.rank == this.selected.rank && card.suit <= this.selected.suit) ) {\r\n\t\t\t\t\t\t\t// Add point to list of scuttles\r\n\t\t\t\t\t\t\tthis.validTargets.push(card);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tmoves.push(\"field\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tif (this.game.bot.numQueens < 1) {\r\n\t\t\t\t\t\tthis.game.bot.points.forEach(card => {\r\n\t\t\t\t\t\t\tthis.validTargets.push(card);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} \r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tmoves.push(\"field\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn moves;\r\n\t}\r\n\r\n\t// Current game is the last in the history\r\n\tget game() {\r\n\t\treturn this.history[this.history.length - 1];\r\n\t}\r\n\r\n\tupdate(oldGame: Game, newGame: Game) {\r\n\t\tthis.history.push(newGame);\r\n\r\n\t\tif (this.game.player.isWinner) {\r\n\t\t\talert(\"You won! Way to go!\");\r\n\t\t} else {\r\n\t\t\tconst suggestion = this.botBrain.suggestMove(oldGame, newGame);\r\n\t\t\tif (suggestion) alert(suggestion);\r\n\t\t}\r\n\t\tif (this.game.bot.isWinner) {\r\n\t\t\t// alert(\"Aww, you lost! Nice try.\");\r\n\t\t}\t\t\r\n\t} \r\n\r\n\tundo() {\r\n\t\tif (this.history.length > 1) {\r\n\t\t\tthis.history.pop();\r\n\t\t} else {\r\n\t\t\talert(\"We are back at the beginning of the game! Try making a move\");\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tthis.history = new Array<Game>();\r\n\t\tthis.validTargets = new Array<Card>();\r\n\t\tthis.history.push(game);\r\n\t\tthis.selIndex = null;\r\n\t\tthis.selected = null;\r\n\t\tthis.botBrain = new Bot();\r\n\t}\r\n}","import { cloneDeep } from 'lodash';\r\nimport { Card } from './card';\r\nimport { Player } from './player';\r\n\r\nexport class Game {\r\n\tplayers: Player[];\r\n\tdeck: Card[];\r\n\tscrap: Card[];\r\n\t// turn: number;\r\n\r\n\t////////////\r\n\t// Getters//\r\n\t////////////\r\n\tget bot() {\r\n\t\treturn this.players[0];\r\n\t}\r\n\tget player() {\r\n\t\treturn this.players[1];\r\n\t}\r\n\tget botWins() {\r\n\t\treturn this.bot.isWinner;\r\n\t}\r\n\tget playerWins() {\r\n\t\treturn this.player.isWinner;\r\n\t}\r\n\r\n\t/////////////\r\n\t// Methods //\r\n\t/////////////\r\n\t// Shuffles deck\r\n\tshuffle() {\r\n\t\tfor (let i=this.deck.length - 1; i> 0; i--) {\r\n\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t[this.deck[i], this.deck[j]] = [this.deck[j], this.deck[i]];\r\n\t\t}\r\n\t}\r\n\r\n\tcopy() {\r\n\t\treturn cloneDeep(this);\r\n\t}\r\n\t\r\n\tconstructor() {\r\n\t\tthis.deck = new Array<Card>();\r\n\t\tthis.scrap = new Array<Card>();\r\n\t\tthis.players = new Array<Player>();\r\n\t\tthis.players.push(new Player(true)); //Bot goes first\r\n\t\tthis.players.push(new Player(false)); //Human player second\r\n\r\n\t\t// Create deck\r\n\t\tfor (let suit=0; suit<4; suit++) {\r\n\t\t\tfor (let rank=1; rank<14; rank++) {\r\n\t\t\t\tthis.deck.push(new Card(suit, rank));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.shuffle(); // Shuffle deck\r\n\r\n\t\t// Deal\r\n\t\tthis.bot.hand.push(this.deck.shift()); //Extra card to player\r\n\t\t// Player gets 5 and goes first, Bot gets 6\r\n\t\tfor (let i=0; i<5; i++) {\r\n\t\t\tthis.players[0].hand.push(this.deck.shift());\r\n\t\t\tthis.players[1].hand.push(this.deck.shift());\r\n\t\t}\r\n\r\n\t}\r\n}","module.exports = \"div {\\r\\n\\tposition: relative;\\r\\n\\tdisplay: inline-block;\\r\\n\\t/* height: 100%; */\\r\\n\\tmargin-left: 2%;\\r\\n}\\r\\nimg {\\r\\n\\tposition: relative;\\r\\n\\tdisplay: inline-block;\\r\\n\\t/* height: 100%; */\\r\\n\\tmax-height: 200px;\\r\\n}\\r\\n.selected {\\r\\n\\tborder: 2px solid green;\\r\\n}\"","module.exports = \"<div *ngFor=\\\"let card of player.hand index as i\\\">\\r\\n\\t<img *ngIf=\\\"player.isBot\\\" src=\\\"assets/cardBack.png\\\" class=\\\"card\\\">\\r\\n\\t<img *ngIf=\\\"!player.isBot\\\" src=\\\"assets/cards/{{card.img}}\\\" class=\\\"card\\\" (click)=clickCard(i) [ngClass]=\\\"{'selected': card == selected}\\\">\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Player } from '../player';\r\nimport { Card } from '../card';\r\nimport { GameService } from '../game.service';\r\n\r\n@Component({\r\n  selector: 'app-hand',\r\n  templateUrl: './hand.component.html',\r\n  styleUrls: ['./hand.component.css']\r\n})\r\nexport class HandComponent implements OnInit {\r\n\t@Input() player: Player;\r\n\tconstructor(private gameService: GameService) { }\r\n\r\n\tget selected() {\r\n\t\treturn this.gameService.selected;\r\n\t}\r\n\tset select(card) {\r\n\t\tthis.gameService.selected = card;\r\n\t}\r\n\r\n\tclickCard(index) {\r\n\t\t// alert(index);\r\n\t\tif (this.player.hand[index] != this.selected) {\r\n\t\t\tthis.select = this.player.hand[index];\r\n\t\t\tthis.gameService.selIndex = index;\r\n\t\t} else {\r\n\t\t\tthis.select = null;\r\n\t\t\tthis.gameService.selIndex = null;\r\n\t\t}\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n}\r\n","import { Card } from './card';\r\nimport { Player } from './player';\r\nimport { Game } from './game';\r\n\r\nlet game = new Game();\r\n\r\n// console.log(game);\r\n\r\nexport { game }","import { Card } from './card';\r\nimport { Game } from './game';\r\nimport { game } from './mock_game';\r\nimport { cloneDeep } from 'lodash';\r\n\r\nexport class Move {\r\n    name: String;\r\n    game: Game; //Result after doing move\r\n    card: Card;\r\n    index: number;\r\n    target: Card;\r\n    target_index: number;\r\n    results: Array<Game>;\r\n\r\n    findResults(game: Game) {\r\n        let resulting_games = [];\r\n        if(game.player.hand.length < 8 && game.deck.length > 0){\r\n            let game_copy = cloneDeep(game);\r\n\r\n            game_copy.player.hand.push(game_copy.deck.shift());\r\n\r\n            resulting_games.push(game_copy);\r\n        }\r\n        // Assume player plays the ten of spades to evaluate player's offense\r\n        let player_plays_ten = cloneDeep(game);\r\n        player_plays_ten.player.points.push(new Card(3, 10));\r\n        player_plays_ten.player.hand.shift();\r\n        resulting_games.push(player_plays_ten);\r\n\r\n        return resulting_games;\r\n    }\r\n\r\n    constructor(name, game, card?, index?, target?, target_index?) {\r\n        this.name = name;\r\n        this.game = game;\r\n        this.card = card;\r\n        this.index = index;\r\n        this.target = target;\r\n        this.target_index = target_index;\r\n        this.results = this.findResults(this.game);\r\n    }\r\n}\r\n","import { Card } from './card';\r\n\r\nexport class Player {\r\n\tisBot: Boolean;\r\n\thand: Card[];\r\n\tpoints: Card[];\r\n\tfaceCards: Card[];\r\n\t\r\n\tget score() {\r\n\t\tlet res = 0;\r\n\t\tthis.points.forEach(card => {\r\n\t\t\tres += card.rank;\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget numKings() {\r\n\t\tlet res = 0;\r\n\t\tthis.faceCards.forEach(card => {\r\n\t\t\tif (card.rank == 13) res++;\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget numQueens() {\r\n\t\tlet res = 0;\r\n\t\tthis.faceCards.forEach(card => {\r\n\t\t\tif (card.rank == 12) res++;\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget pointTotal() {\r\n\t\tlet res = 0;\r\n\t\tthis.points.forEach(card => {\r\n\t\t\tres += card.rank;\r\n\t\t});\r\n\t\treturn res;\r\n\t}\r\n\tget remainingPointsNeededToWin() {\r\n\t\tlet res = 21;\r\n\t\tswitch (this.numKings) {\r\n\t\t\tcase 0:\r\n\t\t\t\tres = 21;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tres = 14;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tres = 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tres = 7;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tres = 5;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tres -= this.pointTotal;\r\n\t\treturn res;\r\n\t}\r\n\tget couldWinWithKing() {\r\n\t\tlet res = false;\r\n\t\tswitch (this.numKings) {\r\n\t\t\tcase 0:\r\n\t\t\t\tif (this.pointTotal >= 14) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tif (this.pointTotal >= 10) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (this.pointTotal >= 7) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tif (this.pointTotal >= 5) res = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\tget isWinner() {\r\n\t\tlet res = false;\r\n\t\tlet score = this.score;\r\n\t\tlet numKings = this.numKings;\r\n\t\tswitch (numKings) {\r\n\t\t\tcase 0:\r\n\t\t\t\tif (score >= 21) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tif (score >= 14) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tif (score >= 10) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tif (score >= 7) res = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tif (score >= 5) res = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\tconstructor(isBot) {\r\n\t\tthis.isBot = isBot;\r\n\t\tthis.hand = new Array<Card>();\r\n\t\tthis.points = new Array<Card>();\r\n\t\tthis.faceCards = new Array<Card>();\r\n\t}\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}